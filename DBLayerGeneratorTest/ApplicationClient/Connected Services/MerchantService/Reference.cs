//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ApplicationClient.MerchantService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="MerchantService.IMerchantService")]
    public interface IMerchantService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/Login", ReplyAction="http://tempuri.org/IBaseService/LoginResponse")]
        string Login(string parameters);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/Login", ReplyAction="http://tempuri.org/IBaseService/LoginResponse")]
        System.Threading.Tasks.Task<string> LoginAsync(string parameters);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/RefreshTokenNoReturn", ReplyAction="http://tempuri.org/IBaseService/RefreshTokenNoReturnResponse")]
        string RefreshTokenNoReturn(string parameters);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/RefreshTokenNoReturn", ReplyAction="http://tempuri.org/IBaseService/RefreshTokenNoReturnResponse")]
        System.Threading.Tasks.Task<string> RefreshTokenNoReturnAsync(string parameters);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMerchantService/CustomerUpsert", ReplyAction="http://tempuri.org/IMerchantService/CustomerUpsertResponse")]
        string CustomerUpsert(string parameters);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMerchantService/CustomerUpsert", ReplyAction="http://tempuri.org/IMerchantService/CustomerUpsertResponse")]
        System.Threading.Tasks.Task<string> CustomerUpsertAsync(string parameters);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMerchantService/ServiceProviderUpsert", ReplyAction="http://tempuri.org/IMerchantService/ServiceProviderUpsertResponse")]
        string ServiceProviderUpsert(string parameters);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMerchantService/ServiceProviderUpsert", ReplyAction="http://tempuri.org/IMerchantService/ServiceProviderUpsertResponse")]
        System.Threading.Tasks.Task<string> ServiceProviderUpsertAsync(string parameters);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMerchantService/AppointmentUpsert", ReplyAction="http://tempuri.org/IMerchantService/AppointmentUpsertResponse")]
        string AppointmentUpsert(string parameters);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMerchantService/AppointmentUpsert", ReplyAction="http://tempuri.org/IMerchantService/AppointmentUpsertResponse")]
        System.Threading.Tasks.Task<string> AppointmentUpsertAsync(string parameters);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMerchantService/AppointmentGet", ReplyAction="http://tempuri.org/IMerchantService/AppointmentGetResponse")]
        string AppointmentGet(string parameters);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMerchantService/AppointmentGet", ReplyAction="http://tempuri.org/IMerchantService/AppointmentGetResponse")]
        System.Threading.Tasks.Task<string> AppointmentGetAsync(string parameters);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IMerchantServiceChannel : ApplicationClient.MerchantService.IMerchantService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class MerchantServiceClient : System.ServiceModel.ClientBase<ApplicationClient.MerchantService.IMerchantService>, ApplicationClient.MerchantService.IMerchantService {
        
        public MerchantServiceClient() {
        }
        
        public MerchantServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public MerchantServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MerchantServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MerchantServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string Login(string parameters) {
            return base.Channel.Login(parameters);
        }
        
        public System.Threading.Tasks.Task<string> LoginAsync(string parameters) {
            return base.Channel.LoginAsync(parameters);
        }
        
        public string RefreshTokenNoReturn(string parameters) {
            return base.Channel.RefreshTokenNoReturn(parameters);
        }
        
        public System.Threading.Tasks.Task<string> RefreshTokenNoReturnAsync(string parameters) {
            return base.Channel.RefreshTokenNoReturnAsync(parameters);
        }
        
        public string CustomerUpsert(string parameters) {
            return base.Channel.CustomerUpsert(parameters);
        }
        
        public System.Threading.Tasks.Task<string> CustomerUpsertAsync(string parameters) {
            return base.Channel.CustomerUpsertAsync(parameters);
        }
        
        public string ServiceProviderUpsert(string parameters) {
            return base.Channel.ServiceProviderUpsert(parameters);
        }
        
        public System.Threading.Tasks.Task<string> ServiceProviderUpsertAsync(string parameters) {
            return base.Channel.ServiceProviderUpsertAsync(parameters);
        }
        
        public string AppointmentUpsert(string parameters) {
            return base.Channel.AppointmentUpsert(parameters);
        }
        
        public System.Threading.Tasks.Task<string> AppointmentUpsertAsync(string parameters) {
            return base.Channel.AppointmentUpsertAsync(parameters);
        }
        
        public string AppointmentGet(string parameters) {
            return base.Channel.AppointmentGet(parameters);
        }
        
        public System.Threading.Tasks.Task<string> AppointmentGetAsync(string parameters) {
            return base.Channel.AppointmentGetAsync(parameters);
        }
    }
}
