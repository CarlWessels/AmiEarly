//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ApplicationClient.AppointmentServiceClient {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="AppointmentServiceClient.IAppointmentService")]
    public interface IAppointmentService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAppointmentService/AccountUpsert", ReplyAction="http://tempuri.org/IAppointmentService/AccountUpsertResponse")]
        string AccountUpsert(string parameters);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAppointmentService/AccountUpsert", ReplyAction="http://tempuri.org/IAppointmentService/AccountUpsertResponse")]
        System.Threading.Tasks.Task<string> AccountUpsertAsync(string parameters);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAppointmentService/AppointmentUpsert", ReplyAction="http://tempuri.org/IAppointmentService/AppointmentUpsertResponse")]
        string AppointmentUpsert(string parameters);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAppointmentService/AppointmentUpsert", ReplyAction="http://tempuri.org/IAppointmentService/AppointmentUpsertResponse")]
        System.Threading.Tasks.Task<string> AppointmentUpsertAsync(string parameters);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAppointmentService/StoreUpsert", ReplyAction="http://tempuri.org/IAppointmentService/StoreUpsertResponse")]
        string StoreUpsert(string parameters);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAppointmentService/StoreUpsert", ReplyAction="http://tempuri.org/IAppointmentService/StoreUpsertResponse")]
        System.Threading.Tasks.Task<string> StoreUpsertAsync(string parameters);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAppointmentService/CustomerUpsert", ReplyAction="http://tempuri.org/IAppointmentService/CustomerUpsertResponse")]
        string CustomerUpsert(string parameters);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAppointmentService/CustomerUpsert", ReplyAction="http://tempuri.org/IAppointmentService/CustomerUpsertResponse")]
        System.Threading.Tasks.Task<string> CustomerUpsertAsync(string parameters);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAppointmentService/ServiceProvdiderUpsert", ReplyAction="http://tempuri.org/IAppointmentService/ServiceProvdiderUpsertResponse")]
        string ServiceProvdiderUpsert(string parameters);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAppointmentService/ServiceProvdiderUpsert", ReplyAction="http://tempuri.org/IAppointmentService/ServiceProvdiderUpsertResponse")]
        System.Threading.Tasks.Task<string> ServiceProvdiderUpsertAsync(string parameters);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAppointmentService/AccountGet", ReplyAction="http://tempuri.org/IAppointmentService/AccountGetResponse")]
        string AccountGet(string parameters);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAppointmentService/AccountGet", ReplyAction="http://tempuri.org/IAppointmentService/AccountGetResponse")]
        System.Threading.Tasks.Task<string> AccountGetAsync(string parameters);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAppointmentService/AppointmentGet", ReplyAction="http://tempuri.org/IAppointmentService/AppointmentGetResponse")]
        string AppointmentGet(string parameters);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAppointmentService/AppointmentGet", ReplyAction="http://tempuri.org/IAppointmentService/AppointmentGetResponse")]
        System.Threading.Tasks.Task<string> AppointmentGetAsync(string parameters);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IAppointmentServiceChannel : ApplicationClient.AppointmentServiceClient.IAppointmentService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AppointmentServiceClient : System.ServiceModel.ClientBase<ApplicationClient.AppointmentServiceClient.IAppointmentService>, ApplicationClient.AppointmentServiceClient.IAppointmentService {
        
        public AppointmentServiceClient() {
        }
        
        public AppointmentServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public AppointmentServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AppointmentServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AppointmentServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string AccountUpsert(string parameters) {
            return base.Channel.AccountUpsert(parameters);
        }
        
        public System.Threading.Tasks.Task<string> AccountUpsertAsync(string parameters) {
            return base.Channel.AccountUpsertAsync(parameters);
        }
        
        public string AppointmentUpsert(string parameters) {
            return base.Channel.AppointmentUpsert(parameters);
        }
        
        public System.Threading.Tasks.Task<string> AppointmentUpsertAsync(string parameters) {
            return base.Channel.AppointmentUpsertAsync(parameters);
        }
        
        public string StoreUpsert(string parameters) {
            return base.Channel.StoreUpsert(parameters);
        }
        
        public System.Threading.Tasks.Task<string> StoreUpsertAsync(string parameters) {
            return base.Channel.StoreUpsertAsync(parameters);
        }
        
        public string CustomerUpsert(string parameters) {
            return base.Channel.CustomerUpsert(parameters);
        }
        
        public System.Threading.Tasks.Task<string> CustomerUpsertAsync(string parameters) {
            return base.Channel.CustomerUpsertAsync(parameters);
        }
        
        public string ServiceProvdiderUpsert(string parameters) {
            return base.Channel.ServiceProvdiderUpsert(parameters);
        }
        
        public System.Threading.Tasks.Task<string> ServiceProvdiderUpsertAsync(string parameters) {
            return base.Channel.ServiceProvdiderUpsertAsync(parameters);
        }
        
        public string AccountGet(string parameters) {
            return base.Channel.AccountGet(parameters);
        }
        
        public System.Threading.Tasks.Task<string> AccountGetAsync(string parameters) {
            return base.Channel.AccountGetAsync(parameters);
        }
        
        public string AppointmentGet(string parameters) {
            return base.Channel.AppointmentGet(parameters);
        }
        
        public System.Threading.Tasks.Task<string> AppointmentGetAsync(string parameters) {
            return base.Channel.AppointmentGetAsync(parameters);
        }
    }
}
